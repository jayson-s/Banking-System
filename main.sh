
#NEED FOLLOWING FILE STRUCTURE FOR SCRIPT TO RUN
# -input
#     '->EXAMPLE COMMAND
#         '->eout
#             '->EXAMPLE.eout
#             '->EXAMPLE2.eout
#         '->in
#             '->EXAMPLE.in
#             '->EXAMPLE2.in
#         '->out
#             '->EXAMPLE.out
#             '->EXAMPLE2.out
# -output (holds outputfrom script)
#     '->file
#         '-> {TRANSACTION FILES OUTPUT BY RUNNING PROGRAM}
#     '->text
#         '-> {FILE WITH TERMINAL OUTPUT FROM RUNNING PROGRAM}
# -Reports
#     '->{ALL REPORTS GENERATED BY RUNNING TESTS}

#Automate build -> Compiles c++ code once and runs tests
cd Banking_System
make
cd ..


#Create Summary File for this round of testing
#Summary File will contains names of all tests that failed
SUMMARY_NAME=Reports/Test-Summary-$(date +'%m-%d-%Y-%H-%M-%S').txt
echo Errors: >> $SUMMARY_NAME

echo "RUNNING TESTS..."
echo
echo

#Runs the C++ program with all the tests
cd ./input/
for i in *
do
    echo "Testing feature: $i"

    #Test within feature folder
    cd ./$i/in
    for j in *
    do
        echo "running test: $j"
        LENG=$((`expr length $j`-3))
        OUT_TEXT=../../../output/text/`expr ${j:0:$LENG}`
        ../../../Banking_System/banking_system < $j > $OUT_TEXT.out
    done
    echo "DONE Testing $i"
    echo " "
    cd ../../
done


#Compare output files to expected text output

echo
echo
echo CHECKING TERMINAL OUTPUTS
echo Terminal Errors below: >> $SUMMARY_NAME
echo
echo

cd ./input/
for i in *
do
    echo "Comparing Terminal Output For: $i"
    
    cd ./$i/out
    for j in *
    do
        echo "Checking terminal output for: $j"

        OUT_FILE=../../../output/text/$j #file of true output
        
        if [ "$(diff $j $OUT_FILE)" = "" ] #CHANGE TEMP TO "" TO PROPERLY TEST
        then
            echo "TEST PASSED"
        else
            echo "ERROR! TEST $J FAILED"
            #print error test to summary file
            echo Test: $j -- FAIL >> ../../../$SUMMARY_NAME
        fi
    done
    echo "DONE Testing $i"
    echo " "
    cd ../../
done
cd ..


#Compare output transaction files to expected output transaction files

# echo
# echo
# echo CHECKING TRANSACTION FILES
# echo Transaction File Errors below: >> $SUMMARY_NAME
# echo
# echo


# cd ./input/
# for i in *
# do
#     echo "Checking Transaction Files For: $i"
    
#     cd ./$i/eout
#     for j in *
#     do
#         echo "Checking transaction file for: $j"

#         #length of j minus chars we dont need (.eout)
#         LEN=$((`expr length $j`-4))
#         OUT_FILE=../../../output/file/`expr ${j:0:$LEN}`.tf #link to Transaction File
        
#         if [ "$(diff $j $OUT_FILE)" = "TEMP" ] #CHANGE TEMP TO "" TO PROPERLY TEST
#         then
#             echo "TEST PASSED"
#         else
#             echo "ERROR! TEST $J FAILED"
#             #print error test to summary file
#             echo Test: $j -- FAIL >> ../../../$SUMMARY_NAME
#         fi
#     done
#     echo "DONE Testing $i"
#     echo " "
#     cd ../../
# done
# cd ..


